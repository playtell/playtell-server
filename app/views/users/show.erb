<% content_for :head do %>

	<script src="http://js.pusher.com/1.11/pusher.min.js"></script>
	<%= javascript_include_tag 'pusher', 'playdate' %>
	
	<%= javascript_include_tag "http://static.twilio.com/libs/twiliojs/1.0/twilio.min.js" %> 

	<script type="text/javascript">
		var tablet = false;
		var pusher;
		var playdateChannel;
		
		$(document).ready(function() {
			<% if tablet_device? %>
				tablet = true;
				document.body.addEventListener('touchmove', function(e){ e.preventDefault(); });
			<% end %>
			pusher = new Pusher($('#pusher-key').html()); 			
			checkForPlaydateRequest(); 
			enableDialpadButtons();
			enableButtons();

			/*$('#password-submit').click(function() {
				$.ajax({
					url: "/api/update_settings", 
					dataType: 'json',
					data: {
						user: {
							email: $('#email').val(),
							password: $('#password').val(), 
					  		password_confirmation: $('#password_confirmation').val() 
						},
						authorization_token: "NF9pqmqzmfwhfqo6jLas"
					},		
					success: function(data) {
						console.log(data.message);
						alert("yay");
					},
					error: function(request, status, error) {
						console.log(request.responseText);
					}
				});
			});	*/
		
			/* Twilio sandbox */

		  /*Twilio.Device.setup("<%= twilio_token %>");

		  Twilio.Device.ready(function (device) {
		    $("#log").text("Ready");
		    $("#name").text("<%= twilio_name %>");
		  });

		  Twilio.Device.error(function (error) {
		    $("#log").text("Error: " + error.message);
		  });

		  Twilio.Device.connect(function (conn) {
		    $("#log").text("Successfully established call");
		  });
		
		  Twilio.Device.disconnect(function (conn) {
		    $("#log").text("Call ended");
		  });
		
		 Twilio.Device.incoming(function (conn) {
		    $("#log").text("Incoming connection from " + conn.parameters.From);
		    // accept the incoming connection and start two-way audio
		    conn.accept();
		  });
		
		Twilio.Device.presence(function (pres) {
	        if (pres.available) {
	          // create an item for the client that became available
	          $("<li>", {id: pres.from, text: pres.from}).click(function () {
	            $("#number").val(pres.from);
	            call();
	          }).prependTo("#people");
	        }
	        else {
	          // find the item by client name and remove it
	          $("#" + pres.from).remove();
	        }
	      });

		});
		
		function call() {
		  Twilio.Device.connect({"clientName": "jason17"});
		}

		function hangup() {
		  Twilio.Device.disconnectAll();
		}*/
		
	</script>
<% end %>
<div class="user-profile">
	
	<div class="clouds"></div>
	
	<div class="dialpad">
		
		<div class="dialpad-header">
			<div><%= image_tag "dialpad_logo.png" %></div>
			<div class="dialpad-ribbon">
				<div class='ribbon ribbon-left'></div>
				<div class="ribbon ribbon-middle body-text">Who will play today?&nbsp</div>
				<div class='ribbon ribbon-right'></div>
			</div>
		</div>
		
		<%= render :partial => "friends" %>
		
		<!--Email: <input type="email" id="email"></input><br />		
		New Password: <input type="password" id="password"></input><br />
		Confirm Password: <input type="password" id="password_confirmation"></input><br />
		<button class="blue big-button" id="password-submit">Change It!</button>
		
		<button class="call" onclick="call();">
		  Call
		</button>
		<button class="hangup" onclick="hangup();">
		  Hangup
		</button>
		<div id="name"></div>
		<div id="log">Loading pigeons...</div>
		<ul id="people"/>-->
		
		
	</div>
	
	<div class="my-profile">
		<%= image_tag current_user.profile_photo.blank? ? "photos/default.jpg" : current_user.profile_photo, 
				:class => "small-user" %>
		<div class="small-user dialpadsprite" id="no-profile"></div>
	</div>
	
	<% if false %><%= render :partial => "games/toybox" %><% end %>
	<div class="overlay hidden"></div>

	<div class="lightbox hidden" id="find-lightbox">
		<div id="find-lightbox-text">
			<h2>Find Playmates</h2>
			<%= form_tag search_users_path, :remote => true, :method => 'get', :id => "playmate-search" do %>
			  <p>
			    <%= text_field_tag :search, params[:search] %>
			    <%= submit_tag "Search", :name => nil %>
			  </p>	
			<% end %>
			<div id="users">
				<%= render "users" %>
			</div>
		</div>
		<button class="close close-x blue">X</button>	
	</div>
</div>
